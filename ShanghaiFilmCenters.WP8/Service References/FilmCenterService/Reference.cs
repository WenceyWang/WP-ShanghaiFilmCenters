//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace ShanghaiFilmCenters.WP8.FilmCenterService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/ShanghaiFilmCenters.Service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM))]
    public partial class Response : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsSuccessField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfArrayOfFilmCenterLOQBF9SM", Namespace="http://schemas.datacontract.org/2004/07/ShanghaiFilmCenters.Service")]
    public partial class ResponseOfArrayOfFilmCenterLOQBF9SM : ShanghaiFilmCenters.WP8.FilmCenterService.Response {
        
        private ShanghaiFilmCenters.WP8.FilmCenterService.FilmCenter[] ItemField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShanghaiFilmCenters.WP8.FilmCenterService.FilmCenter[] Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfArrayOfMovieInfoLOQBF9SM", Namespace="http://schemas.datacontract.org/2004/07/ShanghaiFilmCenters.Service")]
    public partial class ResponseOfArrayOfMovieInfoLOQBF9SM : ShanghaiFilmCenters.WP8.FilmCenterService.Response {
        
        private ShanghaiFilmCenters.WP8.FilmCenterService.MovieInfo[] ItemField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShanghaiFilmCenters.WP8.FilmCenterService.MovieInfo[] Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieInfo", Namespace="http://schemas.datacontract.org/2004/07/ShanghaiFilmCenters.Service")]
    public partial class MovieInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> DateField;
        
        private string FilmCenterNameField;
        
        private string HallField;
        
        private string LanguageField;
        
        private string PriceField;
        
        private System.Nullable<System.DateTime> StartTimeField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilmCenterName {
            get {
                return this.FilmCenterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmCenterNameField, value) != true)) {
                    this.FilmCenterNameField = value;
                    this.RaisePropertyChanged("FilmCenterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hall {
            get {
                return this.HallField;
            }
            set {
                if ((object.ReferenceEquals(this.HallField, value) != true)) {
                    this.HallField = value;
                    this.RaisePropertyChanged("Hall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FilmCenter", Namespace="http://schemas.datacontract.org/2004/07/ShanghaiFilmCenters.Service")]
    public partial class FilmCenter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string DetailAddressField;
        
        private string DisplayNameField;
        
        private string PhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailAddress {
            get {
                return this.DetailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailAddressField, value) != true)) {
                    this.DetailAddressField = value;
                    this.RaisePropertyChanged("DetailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FilmCenterService.IFilmCenterService")]
    public interface IFilmCenterService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFilmCenterService/GetMovies", ReplyAction="http://tempuri.org/IFilmCenterService/GetMoviesResponse")]
        System.IAsyncResult BeginGetMovies(string filmCenterCode, System.DateTime selectedDate, System.AsyncCallback callback, object asyncState);
        
        ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM EndGetMovies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFilmCenterService/GetAllFilmCenters", ReplyAction="http://tempuri.org/IFilmCenterService/GetAllFilmCentersResponse")]
        System.IAsyncResult BeginGetAllFilmCenters(System.AsyncCallback callback, object asyncState);
        
        ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM EndGetAllFilmCenters(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFilmCenterServiceChannel : ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMoviesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMoviesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFilmCentersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFilmCentersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FilmCenterServiceClient : System.ServiceModel.ClientBase<ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService>, ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService {
        
        private BeginOperationDelegate onBeginGetMoviesDelegate;
        
        private EndOperationDelegate onEndGetMoviesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMoviesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFilmCentersDelegate;
        
        private EndOperationDelegate onEndGetAllFilmCentersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFilmCentersCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FilmCenterServiceClient() {
        }
        
        public FilmCenterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FilmCenterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilmCenterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FilmCenterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetMoviesCompletedEventArgs> GetMoviesCompleted;
        
        public event System.EventHandler<GetAllFilmCentersCompletedEventArgs> GetAllFilmCentersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService.BeginGetMovies(string filmCenterCode, System.DateTime selectedDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovies(filmCenterCode, selectedDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService.EndGetMovies(System.IAsyncResult result) {
            return base.Channel.EndGetMovies(result);
        }
        
        private System.IAsyncResult OnBeginGetMovies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filmCenterCode = ((string)(inValues[0]));
            System.DateTime selectedDate = ((System.DateTime)(inValues[1]));
            return ((ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService)(this)).BeginGetMovies(filmCenterCode, selectedDate, callback, asyncState);
        }
        
        private object[] OnEndGetMovies(System.IAsyncResult result) {
            ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM retVal = ((ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService)(this)).EndGetMovies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMoviesCompleted(object state) {
            if ((this.GetMoviesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMoviesCompleted(this, new GetMoviesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMoviesAsync(string filmCenterCode, System.DateTime selectedDate) {
            this.GetMoviesAsync(filmCenterCode, selectedDate, null);
        }
        
        public void GetMoviesAsync(string filmCenterCode, System.DateTime selectedDate, object userState) {
            if ((this.onBeginGetMoviesDelegate == null)) {
                this.onBeginGetMoviesDelegate = new BeginOperationDelegate(this.OnBeginGetMovies);
            }
            if ((this.onEndGetMoviesDelegate == null)) {
                this.onEndGetMoviesDelegate = new EndOperationDelegate(this.OnEndGetMovies);
            }
            if ((this.onGetMoviesCompletedDelegate == null)) {
                this.onGetMoviesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMoviesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMoviesDelegate, new object[] {
                        filmCenterCode,
                        selectedDate}, this.onEndGetMoviesDelegate, this.onGetMoviesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService.BeginGetAllFilmCenters(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFilmCenters(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService.EndGetAllFilmCenters(System.IAsyncResult result) {
            return base.Channel.EndGetAllFilmCenters(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFilmCenters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService)(this)).BeginGetAllFilmCenters(callback, asyncState);
        }
        
        private object[] OnEndGetAllFilmCenters(System.IAsyncResult result) {
            ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM retVal = ((ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService)(this)).EndGetAllFilmCenters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFilmCentersCompleted(object state) {
            if ((this.GetAllFilmCentersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFilmCentersCompleted(this, new GetAllFilmCentersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFilmCentersAsync() {
            this.GetAllFilmCentersAsync(null);
        }
        
        public void GetAllFilmCentersAsync(object userState) {
            if ((this.onBeginGetAllFilmCentersDelegate == null)) {
                this.onBeginGetAllFilmCentersDelegate = new BeginOperationDelegate(this.OnBeginGetAllFilmCenters);
            }
            if ((this.onEndGetAllFilmCentersDelegate == null)) {
                this.onEndGetAllFilmCentersDelegate = new EndOperationDelegate(this.OnEndGetAllFilmCenters);
            }
            if ((this.onGetAllFilmCentersCompletedDelegate == null)) {
                this.onGetAllFilmCentersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFilmCentersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFilmCentersDelegate, null, this.onEndGetAllFilmCentersDelegate, this.onGetAllFilmCentersCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService CreateChannel() {
            return new FilmCenterServiceClientChannel(this);
        }
        
        private class FilmCenterServiceClientChannel : ChannelBase<ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService>, ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService {
            
            public FilmCenterServiceClientChannel(System.ServiceModel.ClientBase<ShanghaiFilmCenters.WP8.FilmCenterService.IFilmCenterService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetMovies(string filmCenterCode, System.DateTime selectedDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = filmCenterCode;
                _args[1] = selectedDate;
                System.IAsyncResult _result = base.BeginInvoke("GetMovies", _args, callback, asyncState);
                return _result;
            }
            
            public ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM EndGetMovies(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM _result = ((ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfMovieInfoLOQBF9SM)(base.EndInvoke("GetMovies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllFilmCenters(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllFilmCenters", _args, callback, asyncState);
                return _result;
            }
            
            public ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM EndGetAllFilmCenters(System.IAsyncResult result) {
                object[] _args = new object[0];
                ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM _result = ((ShanghaiFilmCenters.WP8.FilmCenterService.ResponseOfArrayOfFilmCenterLOQBF9SM)(base.EndInvoke("GetAllFilmCenters", _args, result)));
                return _result;
            }
        }
    }
}
